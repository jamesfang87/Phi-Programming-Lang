fun println(const msg: string) {}

// Test basic return statement
fun test_return() -> i64 {
    return 42;
}

// Test return with defer
fun test_defer_and_return() -> i64 {
    defer println("This defer should execute");
    return 100;
}

// Test break in while loop
fun test_while_break() {
    var i = 0;
    while (i < 10) {
        if (i == 3) {
            break;
        }
        i = i + 1;
    }
}

// Test continue in while loop
fun test_while_continue() {
    var i = 0;
    while (i < 5) {
        i = i + 1;
        if (i == 3) {
            continue;
        }
    }
}

// Test break in for loop
fun test_for_break() {
    for i in 0..10 {
        if (i == 5) {
            break;
        }
    }
}

// Test continue in for loop
fun test_for_continue() {
    for i in 0..5 {
        if (i == 2) {
            continue;
        }
    }
}

fun main() {
    const x = test_return();
    const y = test_defer_and_return();
    test_while_break();
    test_while_continue();
    test_for_break();
    test_for_continue();
}
